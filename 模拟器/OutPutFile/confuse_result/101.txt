0: mov eax, dword ptr [esi]             
<eax_w><esi_r><mem_r>
4: add esi, 4                           
<esi_r><esi_w>
5: movzx edx, byte ptr [ebp]            
<ebp_r><edx_w><mem_r>
7: lea ebp, [ebp + 1]                   
<ebp_r><ebp_w>
10: xor dl, bl                          
<bl_r><dl_r><dl_w>
12: dec dl                              
<dl_r><dl_w>
14: ror dl, 1                           
<dl_r><dl_w>
16: neg dl                              
<dl_r><dl_w>
18: xor dl, 0x8e                        
<dl_r><dl_w>
19: xor bl, dl                          
<bl_r><bl_w><dl_r>
21: mov dword ptr [esp + edx], eax      
<eax_r><edx_r><esp_r><mem_w>
23: mov edx, dword ptr [ebp]            
<ebp_r><edx_w><mem_r>
25: add ebp, 4                          
<ebp_r><ebp_w>
28: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
29: bswap edx                           
<edx_r><edx_w>
30: ror edx, 3                          
<edx_r><edx_w>
34: xor edx, 0x23354d45                 
<edx_r><edx_w>
37: ror edx, 2                          
<edx_r><edx_w>
39: lea edx, [edx + 0x74466ed0]         
<edx_r><edx_w>
40: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
42: add edi, edx                        
<edi_r><edi_w><edx_r><eflag_w>
end:: jmp edi                           
