0: mov eax, edi                         
<eax_w><edi_r>
1: lea edi, [edi - 4]                   
<edi_r><edi_w>
3: mov dword ptr [edi], eax             
<eax_r><edi_r><mem_w>
6: sub esi, 4                           
<esi_r><esi_w>
8: mov edx, dword ptr [esi]             
<edx_w><esi_r><mem_r>
11: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
13: xor edx, 0x7f0c15                   
<edx_r><edx_w>
14: not edx                             
<edx_r><edx_w>
17: ror edx, 1                          
<edx_r><edx_w>
19: dec edx                             
<edx_r><edx_w>
22: not edx                             
<edx_r><edx_w>
23: neg edx                             
<edx_r><edx_w>
25: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
28: add ebp, edx                        
<ebp_r><ebp_w><edx_r>
30: lea ecx, [esp + 0x60]               
<ecx_w><esp_r>
32: cmp edi, ecx                        
<ecx_r><edi_r><eflag_w>
end:: jmp ebp                           
