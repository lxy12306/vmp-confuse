0: lea esi, [esi - 1]                   
<esi_r><esi_w>
3: movzx edx, byte ptr [esi]            
<edx_w><esi_r><mem_r>
6: xor dl, bl                           
<bl_r><dl_r><dl_w>
7: rol dl, 1                            
<dl_r><dl_w>
11: xor dl, 0xfc                        
<dl_r><dl_w>
14: ror dl, 1                           
<dl_r><dl_w>
17: inc dl                              
<dl_r><dl_w>
18: rol dl, 1                           
<dl_r><dl_w>
19: add dl, 0x67                        
<dl_r><dl_w>
21: xor bl, dl                          
<bl_r><bl_w><dl_r>
24: mov eax, dword ptr [esp + edx]      
<eax_w><edx_r><esp_r><mem_r>
27: lea edi, [edi - 4]                  
<edi_r><edi_w>
30: mov dword ptr [edi], eax            
<eax_r><edi_r><mem_w>
32: lea esi, [esi - 4]                  
<esi_r><esi_w>
36: mov edx, dword ptr [esi]            
<edx_w><esi_r><mem_r>
38: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
41: bswap edx                           
<edx_r><edx_w>
42: neg edx                             
<edx_r><edx_w>
44: bswap edx                           
<edx_r><edx_w>
48: sub edx, 0x191125f7                 
<edx_r><edx_w>
50: xor edx, 0x2c607e7b                 
<edx_r><edx_w>
53: ror edx, 1                          
<edx_r><edx_w>
54: neg edx                             
<edx_r><edx_w>
55: rol edx, 1                          
<edx_r><edx_w>
57: xor edx, 0x3347261a                 
<edx_r><edx_w>
60: rol edx, 2                          
<edx_r><edx_w>
62: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
63: test al, 0xcb                       
<al_r><al_w>
64: add ebp, edx                        
<ebp_r><ebp_w><edx_r>
67: lea ecx, [esp + 0x60]               
<ecx_w><esp_r>
69: cmp edi, ecx                        
<ecx_r><edi_r><eflag_w>
end:: jmp ebp                           
