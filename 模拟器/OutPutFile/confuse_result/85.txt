0: lea esi, [esi - 1]                   
<esi_r><esi_w>
3: movzx edx, byte ptr [esi]            
<edx_w><esi_r><mem_r>
6: xor dl, bl                           
<bl_r><dl_r><dl_w>
7: rol dl, 1                            
<dl_r><dl_w>
9: xor dl, 0xfc                         
<dl_r><dl_w>
10: ror dl, 1                           
<dl_r><dl_w>
11: inc dl                              
<dl_r><dl_w>
15: rol dl, 1                           
<dl_r><dl_w>
17: add dl, 0x67                        
<dl_r><dl_w>
18: xor bl, dl                          
<bl_r><bl_w><dl_r>
22: mov eax, dword ptr [esp + edx]      
<eax_w><edx_r><esp_r><mem_r>
23: cdq                                 
<eax_r><eax_w>
26: sub edi, 4                          
<edi_r><edi_w>
27: mov dword ptr [edi], eax            
<eax_r><edi_r><mem_w>
28: sub esi, 4                          
<esi_r><esi_w>
32: mov edx, dword ptr [esi]            
<edx_w><esi_r><mem_r>
35: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
37: bswap edx                           
<edx_r><edx_w>
38: neg edx                             
<edx_r><edx_w>
40: bswap edx                           
<edx_r><edx_w>
43: sub edx, 0x191125f7                 
<edx_r><edx_w>
46: xor edx, 0x2c607e7b                 
<edx_r><edx_w>
47: ror edx, 1                          
<edx_r><edx_w>
49: neg edx                             
<edx_r><edx_w>
50: rol edx, 1                          
<edx_r><edx_w>
51: xor edx, 0x3347261a                 
<edx_r><edx_w>
53: rol edx, 2                          
<edx_r><edx_w>
55: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
58: add ebp, edx                        
<ebp_r><ebp_w><edx_r>
61: lea ecx, [esp + 0x60]               
<ecx_w><esp_r>
63: cmp edi, ecx                        
<ecx_r><edi_r><eflag_w>
end:: jmp ebp                           
