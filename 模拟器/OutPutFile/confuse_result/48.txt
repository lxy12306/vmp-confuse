0: mov eax, dword ptr [edi]             
<eax_w><edi_r><mem_r>
3: mov cl, byte ptr [edi + 4]           
<cl_w><edi_r><mem_r>
6: sub edi, 2                           
<edi_r><edi_w>
7: shr eax, cl                          
<cl_r><eax_r><eax_w><eflag_w>
9: mov dword ptr [edi + 4], eax         
<eax_r><edi_r><mem_w>
11: pushfd                              
<eflag_r><esp_r><esp_w>
15: pop dword ptr [edi]                 
<edi_r><esp_r><esp_w><mem_w>
18: lea esi, [esi - 4]                  
<esi_r><esi_w>
20: mov edx, dword ptr [esi]            
<edx_w><esi_r><mem_r>
23: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
25: sub edx, 0xfa50839                  
<edx_r><edx_w>
26: not edx                             
<edx_r><edx_w>
30: bswap edx                           
<edx_r><edx_w>
31: xor edx, 0x1c071210                 
<edx_r><edx_w>
32: rol edx, 1                          
<edx_r><edx_w>
34: inc edx                             
<edx_r><edx_w>
35: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
38: add ebp, edx                        
<ebp_r><ebp_w><edx_r>
41: lea ecx, [esp + 0x60]               
<ecx_w><esp_r>
43: cmp edi, ecx                        
<ecx_r><edi_r><eflag_w>
end:: jmp ebp                           
