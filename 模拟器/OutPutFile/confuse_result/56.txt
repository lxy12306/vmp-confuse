0: mov ecx, dword ptr [edi]             
<ecx_w><edi_r><mem_r>
3: lea edi, [edi + 4]                   
<edi_r><edi_w>
5: sub esi, 1                           
<esi_r><esi_w>
7: movzx edx, byte ptr [esi]            
<edx_w><esi_r><mem_r>
11: xor dl, bl                          
<bl_r><dl_r><dl_w>
13: not dl                              
<dl_r><dl_w>
15: inc dl                              
<dl_r><dl_w>
19: not dl                              
<dl_r><dl_w>
21: neg dl                              
<dl_r><dl_w>
22: inc dl                              
<dl_r><dl_w>
26: rol dl, 1                           
<dl_r><dl_w>
27: not dl                              
<dl_r><dl_w>
30: inc dl                              
<dl_r><dl_w>
32: xor bl, dl                          
<bl_r><bl_w><dl_r>
35: mov dword ptr [esp + edx], ecx      
<ecx_r><edx_r><esp_r><mem_w>
39: lea esi, [esi - 4]                  
<esi_r><esi_w>
40: mov eax, dword ptr [esi]            
<eax_w><esi_r><mem_r>
41: xor eax, ebx                        
<eax_r><eax_w><ebx_r>
43: bswap eax                           
<eax_r><eax_w>
46: neg eax                             
<eax_r><eax_w>
48: dec eax                             
<eax_r><eax_w>
51: ror eax, 3                          
<eax_r><eax_w>
53: xor eax, 0x3d8d4f70                 
<eax_r><eax_w>
56: xor ebx, eax                        
<eax_r><ebx_r><ebx_w>
58: add ebp, eax                        
<eax_r><ebp_r><ebp_w><eflag_w>
end:: jmp ebp                           
