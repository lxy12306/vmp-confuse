0: mov eax, dword ptr [esi]             
<eax_w><esi_r><mem_r>
2: add esi, 4                           
<esi_r><esi_w>
3: movzx edx, byte ptr [ebp]            
<ebp_r><edx_w><mem_r>
4: add ebp, 1                           
<ebp_r><ebp_w>
6: xor dl, bl                           
<bl_r><dl_r><dl_w>
8: dec dl                               
<dl_r><dl_w>
9: ror dl, 1                            
<dl_r><dl_w>
10: neg dl                              
<dl_r><dl_w>
13: xor dl, 0x8e                        
<dl_r><dl_w>
15: xor bl, dl                          
<bl_r><bl_w><dl_r>
16: mov dword ptr [esp + edx], eax      
<eax_r><edx_r><esp_r><mem_w>
18: mov edx, dword ptr [ebp]            
<ebp_r><edx_w><mem_r>
22: lea ebp, [ebp + 4]                  
<ebp_r><ebp_w>
23: xor edx, ebx                        
<ebx_r><edx_r><edx_w>
24: bswap edx                           
<edx_r><edx_w>
26: ror edx, 3                          
<edx_r><edx_w>
27: xor edx, 0x23354d45                 
<edx_r><edx_w>
28: ror edx, 2                          
<edx_r><edx_w>
31: add edx, 0x74466ed0                 
<edx_r><edx_w>
35: xor ebx, edx                        
<ebx_r><ebx_w><edx_r>
37: add edi, edx                        
<edi_r><edi_w><edx_r><eflag_w>
end:: jmp edi                           
