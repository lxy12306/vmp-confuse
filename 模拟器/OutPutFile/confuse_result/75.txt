0: mov eax, dword ptr [edi]             
<eax_w><edi_r><mem_r>
2: mov ecx, dword ptr [edi + 4]         
<ecx_w><edi_r><mem_r>
4: not eax                              
<eax_r><eax_w>
5: not ecx                              
<ecx_r><ecx_w>
6: or eax, ecx                          
<eax_r><eax_w><ecx_r><eflag_w>
7: mov dword ptr [edi + 4], eax         
<eax_r><edi_r><mem_w>
9: pushfd                               
<eflag_r><esp_r><esp_w>
13: pop dword ptr [edi]                 
<edi_r><esp_r><esp_w><mem_w>
16: lea esi, [esi - 4]                  
<esi_r><esi_w>
17: mov eax, dword ptr [esi]            
<eax_w><esi_r><mem_r>
20: xor eax, ebx                        
<eax_r><eax_w><ebx_r>
22: dec eax                             
<eax_r><eax_w>
26: bswap eax                           
<eax_r><eax_w>
28: xor eax, 0x77750d6a                 
<eax_r><eax_w>
29: ror eax, 1                          
<eax_r><eax_w>
30: dec eax                             
<eax_r><eax_w>
32: neg eax                             
<eax_r><eax_w>
34: ror eax, 3                          
<eax_r><eax_w>
35: lea eax, [eax + 0x661a78f0]         
<eax_r><eax_w>
38: neg eax                             
<eax_r><eax_w>
39: xor eax, 0x51315ca9                 
<eax_r><eax_w>
40: add eax, 0x71b037e5                 
<eax_r><eax_w>
42: ror eax, 1                          
<eax_r><eax_w>
45: xor ebx, eax                        
<eax_r><ebx_r><ebx_w>
47: add ebp, eax                        
<eax_r><ebp_r><ebp_w><eflag_w>
end:: jmp ebp                           
