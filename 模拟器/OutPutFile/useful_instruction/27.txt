0: mov cx, word ptr [edi]               
<cx_w><edi_r><mem_r>
1: mov ax, word ptr [edi + 2]           
<ax_w><edi_r><mem_r>
5: sub edi, 2                           
<edi_r><edi_w>
6: not cx                               
<cx_r><cx_w>
8: not ax                               
<ax_r><ax_w>
11: or cx, ax                           
<ax_r><cx_r><cx_w><eflag_w>
12: mov word ptr [edi + 4], cx          
<cx_r><edi_r><mem_w>
14: pushfd                              
<eflag_r><esp_r><esp_w>
18: pop dword ptr [edi]                 
<edi_r><esp_r><esp_w><mem_w>
36: xor ebx, eax                        
<eax_r><ebx_r><ebx_w>
42: lea ecx, [esp + 0x60]               
<ecx_w><esp_r>
44: cmp edi, ecx                        
<ecx_r><edi_r><eflag_w>
